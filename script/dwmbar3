#!/bin/sh
dte(){
        dte="$(date +"%a,%b-%d-%y|%R")"
        echo "$dte"
}

hdd(){
        hdd="$(df -h /home | grep dev | awk '{print$3"="$5}')"
        echo " $hdd"
}

mem(){
        mem="$(free -h | awk '/Mem:/ {printf $3 "/" $2}')"
        echo " $mem"
}

temp(){
	mytemp="$(cat /sys/class/thermal/thermal_zone0/temp)"
	temp=$(($mytemp/1000))
	echo ":$temp℃"
}

cpu() {
    read cpu a b c previdle rest < /proc/stat
      prevtotal=$((a+b+c+previdle))
        sleep 0.5
          read cpu a b c idle rest < /proc/stat
            total=$((a+b+c+idle))
              cpu=$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))
                echo "CPU:$cpu%"
}

vol(){
	vol="$(amixer -D pulse get Master | awk -F'[][]' 'END{print ":"$2}')"
	echo " $vol"
}

bat() {
	battery="$(cat /sys/class/power_supply/BAT0/capacity)"
	if   [ $battery -ge 0  ] && [ $battery -le 10  ]; then
    	echo ":"$battery"%"
	elif [ $battery -ge 11 ] && [ $battery -le 20  ]; then
    	echo ":"$battery"%"
	elif [ $battery -ge 21 ] && [ $battery -le 30  ]; then
    	echo ":"$battery"%"
	elif [ $battery -ge 31 ] && [ $battery -le 40  ]; then
    	echo ":"$battery"%"
	elif [ $battery -ge 41 ] && [ $battery -le 50  ]; then
    	echo ":"$battery"%"
	elif [ $battery -ge 51 ] && [ $battery -le 60  ]; then
    	echo ":"$battery"%"
	elif [ $battery -ge 61 ] && [ $battery -le 70  ]; then
    	echo ":"$battery"%"
	elif [ $battery -ge 71 ] && [ $battery -le 80  ]; then
    	echo ":"$battery"%"
	elif [ $battery -ge 81 ] && [ $battery -le 90  ]; then
    	echo ":"$battery"%"
	elif [ $battery -ge 91 ] && [ $battery -le 100 ]; then
    	echo ":"$battery"%"
	else
    	echo ":UNKNWN"
	fi
}

batstat() {
	bstat="$(cat /sys/class/power_supply/BAT0/status)"
	if   [ $bstat = "Charging"    ]; then
	    echo " " # charging
	elif [ $bstat = "Discharging" ]; then
	    echo "" # discharging
	else
	    echo "" # idle
	fi
}

net(){
	case "$(cat /sys/class/net/w*/operstate 2>/dev/null)" in
		down) wifiicon=" " ;;
		up)   wifiicon="$(awk '/^\s*w/ { print "", int($3 * 100 / 70) }' /proc/net/wireless)" ;;
	esac

	printf "%s%s%s%s%s\n" "$wifiicon" "$(sed "s/down//;s/up/ /" /sys/class/net/e*/operstate 2>/dev/null)" "$(sed "s/.*/  VPN/" /sys/class/net/tun*/operstate 2>/dev/null)" "$(if pgrep -x tor >/dev/null 2>&1; then echo "  TOR"; fi)" "$(if pgrep -x bluetoothd >/dev/null 2>&1; then echo " "; fi)"
}

traffic(){
	update() {
	    sum=0
    	for arg; do
        read -r i < "$arg"
        	sum=$(( sum + i ))
    	done
	    cache=${XDG_CACHE_HOME:-$HOME/.cache}/${1##*/}
    	[ -f "$cache" ] && read -r old < "$cache" || old=0
	    printf %d\\n "$sum" > "$cache"
    	printf %d\\n $(( sum - old ))
	}

	rx=$(update /sys/class/net/[ew]*/statistics/rx_bytes)
	tx=$(update /sys/class/net/[ew]*/statistics/tx_bytes)

	printf " %1sB  %1sB\\n" $(numfmt --to=iec $rx) $(numfmt --to=iec $tx)
}

record(){
printf "%s" "$(\
if pgrep -f ffmpeg > /dev/null 2>&1; then \
    blink=$(date +%s); \
    if [ $((blink % 2)) -eq 0 ]; then \
        echo "  REC"; \
    else \
        echo "   REC";
    fi; \
else \
    echo ""; \
fi)"
}

status(){
	echo "$(record)|$(traffic)|$(net)|$(cpu)|$(temp)|$(mem)|$(hdd)|$(batstat)$(bat)|$(vol)|$(dte)|"
}


while true; do
	xsetroot -name "$(status)"
	sleep 1
done
